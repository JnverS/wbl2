package main

import (
	"fmt"
	"sort"
)

/*
	Поиск анаграмм по словарю
	Написать функцию поиска всех множеств анаграмм по словарю.

	Например:
	'пятак', 'пятка' и 'тяпка' - принадлежат одному множеству,
	'листок', 'слиток' и 'столик' - другому.

	Требования:
	- Входные данные для функции: ссылка на массив, каждый элемент
	которого - слово на русском языке в кодировке utf8
	- Выходные данные: ссылка на мапу множеств анаграмм
	- Ключ - первое встретившееся в словаре слово из множества.
	- Значение - ссылка на массив, каждый элемент которого, слово из множества
	- Массив должен быть отсортирован по возрастанию.
	- Множества из одного элемента не должны попасть в результат.
	- Все слова должны быть приведены к нижнему регистру.
	- В результате каждое слово должно встречаться только один раз.
*/

// FindAnagram функция которая ищет анаграммы
func FindAnagram(arr []string) *map[string][]string {
	result := make(map[string][]string)


	for _, w := range arr {
		word := []rune(w)
		sort.Slice(word, func(i, j int) bool {
			return word[i] < word[j]
		})
		
	}

	return &result
}

// isDuplicate определяет дубликаты
func isDuplicate(s1 string, s2 []string) bool {

	return false
}

func main() {
	dict := []string{"пятак", "пятка", "тяпка", "листок", "столик", "слиток", "слово", "слово", "пятка"}
	fmt.Println(FindAnagram(dict))
}
